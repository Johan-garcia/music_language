version: "3.9"

services:
  db:
    image: postgres:16-alpine
    container_name: music-db-prod
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-music}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB:-musicdb}
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-music} -d ${POSTGRES_DB:-musicdb}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - music-network
    restart: unless-stopped

  api:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: music-api-prod
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-music}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB:-musicdb}
      - YOUTUBE_API_KEY=${YOUTUBE_API_KEY}
      - SPOTIFY_CLIENT_ID=${SPOTIFY_CLIENT_ID}
      - SPOTIFY_CLIENT_SECRET=${SPOTIFY_CLIENT_SECRET}
      - GENIUS_ACCESS_TOKEN=${GENIUS_ACCESS_TOKEN}
      - SECRET_KEY=${SECRET_KEY}
      - ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=${ACCESS_TOKEN_EXPIRE_MINUTES:-30}
      - BACKEND_CORS_ORIGINS=${BACKEND_CORS_ORIGINS:-http://localhost:3000}
    ports:
      - "${API_PORT:-8000}:8000"
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --workers 4
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - music-network

  nginx:
    image: nginx:alpine
    container_name: music-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - api
    restart: unless-stopped
    networks:
      - music-network

  redis:
    image: redis:7-alpine
    container_name: music-redis-prod
    volumes:
      - redis_data_prod:/data
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    restart: unless-stopped
    networks:
      - music-network

volumes:
  postgres_data_prod:
  redis_data_prod:

networks:
  music-network:
    driver: bridge